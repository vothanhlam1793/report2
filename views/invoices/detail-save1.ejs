<html>
    <head>
        <%- include('../header.ejs') %>

        
        <script>
            var Invoice = Backbone.Model.extend({
                urlRoot: "/api/invoices"
            })

            var ProductBarcode = Backbone.Model.extend({
                urlRoot: "/api/productBarcodes"
            })
        </script>
        <script>
            var f1 = function(){};
            // console.log("hi");
            function connect() {
                //var ws = new WebSocket("wss://dir.creta.work/public/messagepublish");
                // console.log("aaaa");
                var ws = new WebSocket("ws://node.creta.work:1888/scan_barcode");
                ws.onopen = function() {
                    // subscribe to some channels
                    console.log("opened")
                };
    
                ws.onmessage = function(e) {
                    // var d = JSON.parse(e.data);
                    // if(d.function == 'add_code'){
                    //     app.add_code(d.code);
                    // }
                    // console.log(e.data);
                    var d;
                    try {
                        d = JSON.parse(e.data);
                    } catch(e){
                        d = {code: ""}
                    }
                    f1(d.code);
                    // if(e.data.code){
                        
                    // }
                    // f1(e.data);
                };
    
                ws.onclose = function(e) {
                    // app.not_ready();
                    console.log('Socket is closed. Reconnect will be attempted in 1 second.', e.reason);
                    setTimeout(function() {
                    connect();
                    }, 1000);
                };
    
                ws.onerror = function(err) {
                    console.log(err);
                    console.error('Socket encountered error: ', err.message, 'Closing socket');
                    ws.close();
                };
                return ws;
            }
            connect();
            
        </script>
        <script>
            
        </script>
        <script></script>
    </head>
    <body>
        <%- include("../menu.ejs"); %>
        <div id="view-detail-invoice">
        

    
            <div class="container" v-if="invoiceModel.invoice_kiot.code">
                <h2>Đơn hàng {{ invoiceModel.invoice_kiot.code }}</h2>
                <button class="btn btn-warning" @click="turn_back()">Trang trước</button>                
                <customer-notes :code="invoiceModel.invoice_kiot.customerCode"></customer-notes>
                <div class="row m-1">
                    <!-- <create-customer-note :code="invoiceModel.invoice_kiot.customerCode" class="col"></create-customer-note> -->
                    <send-invoice-sms :code="invoiceModel.invoice_kiot.code" class="col"></send-invoice-sms>
                    <change-invoice-status :code="invoiceModel.invoice_kiot.code" class="col"></change-invoice-status>
                </div>
                
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <td>Check</td>
                            <td>Tên</td>
                            <td>Số lượng</td>
                            <td>Hành động</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="product in invoiceModel.invoice_kiot.invoiceDetails">
                            <td><input type="checkbox" class="form-control" @change="changeInvoiceProductCheck(invoiceModel.invoice_kiot.code, product.productCode)"></td>
                            <td>{{ product.productName }}</td>
                            <td>{{ product.quantity }}</td>
                            <td><save-barcodes-product :invoice_code="invoiceModel.invoice_kiot.code" :product_code="product.productCode"></save-barcodes-product></td>
                        </tr>
                    </tbody>
                </table>
    
                <invoice-packages code="invoiceModel.invoice_kiot.code"></invoice-packages>
            </div>
        </div>
        
        <script>
            const urlSearchParams = new URLSearchParams(window.location.search);
            const params = Object.fromEntries(urlSearchParams.entries());
            if(!params.code){
                alert("Mã hóa đơn không được để trống");
            }
            var view_detail_invoice = new Vue({
                el: "#view-detail-invoice",
                data: {
                    invoiceModel: new ModelInvoice( params.code )
                },
                methods: {
                    onUpdateData: function(){
                        this.$forceUpdate();
                    },
                    turn_back: function(){
                        window.history.back();
                    }
                },
                created(){
                    this.invoiceModel.onUpdateData = this.onUpdateData;
                }
            })
        </script>
    </body>
    
</html>
