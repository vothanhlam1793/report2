<html>
  <head>
    <%- include('../header.ejs') %>
    <script src="https://unpkg.com/html5-qrcode"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
      .barcode-list {
        list-style-type: none;
        padding: 0;
      }
      .barcode-item {
        background: #f8f9fa;
        padding: 10px;
        margin: 5px 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-radius: 5px;
      }
      .barcode-item button {
        background: red;
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
      }
    </style>
  </head>
  <body>
    <%- include("../menu.ejs"); %>

    <div class="container">
      <h2 id="invoice-title">ƒêang t·∫£i h√≥a ƒë∆°n...</h2>
      <p><strong>M√£ h√≥a ƒë∆°n:</strong> <span id="invoice-code"></span></p>
      <p><strong>M√£ s·∫£n ph·∫©m:</strong> <span id="product-code"></span></p>
      <p><strong>T√™n s·∫£n ph·∫©m:</strong> <span id="product-name"></span></p>

      <h3>Qu√©t Barcode</h3>
      <div id="reader" class="scanner-container"></div>

      <h4>Danh s√°ch barcode ƒë√£ qu√©t:</h4>
      <ul id="barcode-list" class="barcode-list"></ul>

      <h4>Nh·∫≠p barcode b·∫±ng tay:</h4>
      <input
        type="text"
        id="manual-barcode"
        class="form-control"
        placeholder="Nh·∫≠p barcode r·ªìi nh·∫•n Enter"
      />

      <button class="btn btn-primary mt-2" onclick="window.history.back()">
        Quay l·∫°i
      </button>
    </div>

    <script>
      $(document).ready(async function () {
        const pathParts = window.location.pathname.split('/')
        const invoiceCode = pathParts[2]
        const productCode = pathParts[3]

        $('#invoice-code').text(invoiceCode)
        $('#product-code').text(productCode)
        $('#invoice-title').text(`H√≥a ƒë∆°n: ${invoiceCode}`)

        let productBarcodeData = {}

        // üõ† L·∫•y danh s√°ch barcode t·ª´ `infos`
        async function loadBarcodes() {
          try {
            const response = await fetch(
              `/api/productBarcodes?productCode=${productCode}`
            )
            productBarcodeData = await response.json()

            $('#barcode-list').empty()

            if (productBarcodeData.length > 0 && productBarcodeData[0].infos) {
              productBarcodeData[0].infos.forEach(info => {
                $('#barcode-list').append(`
                  <li class="barcode-item">
                    <span>${info.code}</span>
                    <button onclick="deleteBarcode('${info.code}')">X</button>
                  </li>
                `)
              })
            }
          } catch (error) {
            console.error('L·ªói khi t·∫£i barcode:', error)
          }
        }
        loadBarcodes()

        // üõ† Th√™m barcode v√†o `infos`
        async function addBarcode(barcode) {
          try {
            if (productBarcodeData.length === 0) {
              // N·∫øu productBarcode ch∆∞a t·ªìn t·∫°i, t·∫°o m·ªõi v·ªõi `infos` ch·ª©a barcode ƒë·∫ßu ti√™n
              await fetch('/api/productBarcodes', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                  productCode,
                  invoiceCode,
                  infos: [{ code: barcode, date: new Date().toISOString() }]
                })
              })
            } else {
              // N·∫øu productBarcode ƒë√£ c√≥, c·∫≠p nh·∫≠t `infos`
              let updatedInfos = productBarcodeData[0].infos || []

              if (updatedInfos.some(info => info.code === barcode)) {
                alert('Barcode ƒë√£ t·ªìn t·∫°i!')
                return
              }

              updatedInfos.push({
                code: barcode,
                date: new Date().toISOString()
              })

              await fetch(`/api/productBarcodes/${productBarcodeData[0].id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                  productCode,
                  invoiceCode,
                  infos: updatedInfos
                })
              })
            }

            alert('Barcode ƒë√£ ƒë∆∞·ª£c l∆∞u!')
            loadBarcodes()
          } catch (error) {
            console.error('L·ªói khi l∆∞u barcode:', error)
          }
        }

        // üõ† X√≥a barcode trong `infos`
        window.deleteBarcode = async function (barcode) {
          try {
            if (productBarcodeData.length > 0) {
              let updatedInfos = productBarcodeData[0].infos.filter(
                info => info.code !== barcode
              )

              await fetch(`/api/productBarcodes/${productBarcodeData[0].id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                  productCode,
                  invoiceCode,
                  infos: updatedInfos
                })
              })

              alert('Barcode ƒë√£ b·ªã x√≥a!')
              loadBarcodes()
            }
          } catch (error) {
            console.error('L·ªói khi x√≥a barcode:', error)
          }
        }

        // üõ† X·ª≠ l√Ω nh·∫≠p barcode b·∫±ng tay
        $('#manual-barcode').keypress(function (e) {
          if (e.which == 13) {
            const barcode = $(this).val().trim()
            if (barcode) {
              addBarcode(barcode)
              $(this).val('')
            }
          }
        })

        // üõ† Kh·ªüi ƒë·ªông scanner
        const scanner = new Html5Qrcode('reader')
        scanner.start(
          { facingMode: 'environment' },
          {
            fps: 10,
            qrbox: { width: 300, height: 80 },
            aspectRatio: 4,
            disableFlip: true
          },
          function (decodedText) {
            addBarcode(decodedText)
          },
          function (errorMessage) {
            console.warn('QR Scan Error:', errorMessage)
          }
        )
      })
    </script>
  </body>
</html>
